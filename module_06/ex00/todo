
//TODO: probably need to add a try and catch if character not displayable or impossible
//TODO: also need to figure out to catch stoi/stof/stod errors

Some notes:

Maybe (what I was going for at first):

#include <iostream>
#include <string>
#include <typeinfo>

//COMMENT: maybe better to create class to keep in a variable the type of string
//and keep somewhere what to print according to type by static_cast<>
//still need to first to take care of pseudo-literals and then, char

int main(int ac, char **av)
{
	if (ac == 2)
	{
		std::string arg = av[1];
		//first detect type passed: first check if it's pseudo-literals
		//look for: -inff, +inff, nanf (float) / -inf, +inf, nan (double)
		//FIXME: prob when inff. Keeps the f for double... maybe go with a switch for each...
		if (arg.compare("-inff") == 0 || arg.compare("+inff") == 0 ||
		arg.compare("nanf") == 0 || arg.compare("-inf") == 0 || arg.compare("+inf") == 0 ||
		arg.compare("nan") == 0)
		{
			std::cout << "char: impossible" << std::endl;
			std::cout << "int: impossible" << std::endl;
			std::cout << "float: " << arg << "f" << std::endl;
			std::cout << "double: " << arg << std::endl;
		}
		else
		{
			std::cout << "move to the next one" << std::endl;
		}



		//second transform string to the type it is

		//finally, do conversion

	}
	else
		std::cout << "need an argument: char, int, float or double" << std::endl;
}